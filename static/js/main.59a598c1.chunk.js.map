{"version":3,"sources":["components/CVForm/PersonalDetailsForm/PersonalDetails.jsx","components/CVPreview/Card/Card.jsx","components/CVForm/EducationForm/EducationForm.jsx","components/CVForm/WorkForm/WorkForm.jsx","components/CVForm/ResumeView.jsx","components/CVPreview/UserCV/UserCV.jsx","App.jsx","index.js"],"names":["PersonalDetailsForm","person","setName","setSurname","setEmail","setNumber","className","htmlFor","type","id","placeholder","onChange","e","name","target","value","required","surname","email","number","Card","fromDate","toDate","title","location","description","EducationForm","previousEducaction","setEducation","useState","school","setSchool","study","setStudy","setFromDate","setToDate","newRecord","key","clearFields","deleteRecord","recordTitle","updatedArray","filter","record","onClick","formWrapper","document","querySelector","classList","toggle","openBtn","innerHTML","onSubmit","preventDefault","prevExp","map","educationRecord","length","WorkForm","workHistory","setWorkExperience","companyName","setCompanyName","position","setPosition","jobDescription","setJobDescription","newJobRecord","workRecord","prevRecords","cols","rows","previousWork","ResumeView","PersonalDetails","UserCV","education","workExperience","App","previewStatus","setPreviewStatus","setPerson","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.59a598c1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './personalDetails.scss';\r\n\r\nfunction PersonalDetailsForm({\r\n  person,\r\n  setName,\r\n  setSurname,\r\n  setEmail,\r\n  setNumber,\r\n}) {\r\n  function handleName(e) {\r\n    const name = e.target.value;\r\n    setName(name);\r\n  }\r\n\r\n  function handleSurname(e) {\r\n    const surname = e.target.value;\r\n    setSurname(surname);\r\n  }\r\n\r\n  function handleEmail(e) {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  }\r\n\r\n  function handleNumber(e) {\r\n    const number = e.target.value;\r\n    setNumber(number);\r\n  }\r\n\r\n  return (\r\n    <div className='details-form-wrapper'>\r\n      <h1 className='section-header'>Personal Details</h1>\r\n      <form className='details-form'>\r\n        <label htmlFor='name-field'>Name</label>\r\n        <input\r\n          type='text'\r\n          id='name-field'\r\n          placeholder='John'\r\n          onChange={handleName}\r\n          required\r\n          value={person.name}\r\n        />\r\n        <label htmlFor='surname-field'>Last Name</label>\r\n        <input\r\n          type='text'\r\n          id='surname-field'\r\n          placeholder='Doe'\r\n          onChange={handleSurname}\r\n          required\r\n          value={person.surname}\r\n        />\r\n        <label htmlFor='email-field'>Email</label>\r\n        <input\r\n          type='email-field'\r\n          id='email-field'\r\n          placeholder='example@gmail.com'\r\n          onChange={handleEmail}\r\n          required\r\n          value={person.email}\r\n        />\r\n        <label htmlFor='phone-field'>Phone Number</label>\r\n        <input\r\n          type='number'\r\n          id='phone-field'\r\n          onChange={handleNumber}\r\n          value={person.number}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonalDetailsForm;\r\n","import React from 'react';\r\nimport './card.scss';\r\n\r\nfunction Card({ fromDate, toDate, title, location, description }) {\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-top'>\r\n        <div className='period'>\r\n          {fromDate} - {toDate}\r\n        </div>\r\n        <div className='details'>\r\n          <div className='title'>{title}</div>\r\n          <div className='location'>{location}</div>\r\n        </div>\r\n      </div>\r\n      <div className='card-bottom'>\r\n        <div className='description'>{description}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState } from 'react';\r\nimport './educationForm.scss';\r\nimport Card from '../../CVPreview/Card/Card';\r\n\r\nfunction EducationForm({ previousEducaction, setEducation }) {\r\n  const [school, setSchool] = useState('');\r\n  const [study, setStudy] = useState('');\r\n  const [fromDate, setFromDate] = useState('');\r\n  const [toDate, setToDate] = useState('');\r\n\r\n  function displayForm() {\r\n    const formWrapper = document.querySelector('.education-form');\r\n    formWrapper.classList.toggle('--visible');\r\n    const openBtn = document.querySelector('.open-form-btn');\r\n    if (formWrapper.classList.value === 'education-form --visible') {\r\n      openBtn.innerHTML = 'Close Form';\r\n      openBtn.className = 'open-form-btn --close';\r\n    } else {\r\n      openBtn.innerHTML = 'Add';\r\n      openBtn.className = 'open-form-btn --add';\r\n    }\r\n  }\r\n\r\n  const newRecord = {\r\n    school,\r\n    study,\r\n    fromDate,\r\n    toDate,\r\n    key: study,\r\n  };\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setEducation((prevExp) => [...prevExp, newRecord]);\r\n    clearFields();\r\n  }\r\n\r\n  function clearFields() {\r\n    setSchool('');\r\n    setStudy('');\r\n    setFromDate('');\r\n    setToDate('');\r\n  }\r\n\r\n  function deleteRecord(e) {\r\n    // get card title to determine which card should be deleted\r\n    const recordTitle = e.target.id;\r\n    // update previous education records array = delete unwanted record\r\n    const updatedArray = previousEducaction.filter(\r\n      (record) => record.study !== recordTitle\r\n    );\r\n    setEducation(updatedArray);\r\n  }\r\n\r\n  return (\r\n    <div className='education-block'>\r\n      <h1 className='section-header'>Education Details</h1>\r\n      <button className='open-form-btn --add' onClick={displayForm}>\r\n        Add\r\n      </button>\r\n      <form className='education-form' onSubmit={handleSubmit}>\r\n        <label htmlFor='school-field'>School Name</label>\r\n        <input\r\n          type='text'\r\n          id='school-field'\r\n          placeholder='MIT'\r\n          onChange={(e) => setSchool(e.target.value)}\r\n          value={school}\r\n          required\r\n        />\r\n        <label htmlFor='study-field'>Study Subject</label>\r\n        <input\r\n          type='text'\r\n          id='study-field'\r\n          placeholder='Physics'\r\n          onChange={(e) => setStudy(e.target.value)}\r\n          value={study}\r\n          required\r\n        />\r\n        <label htmlFor='study-start'>From:</label>\r\n        <input\r\n          type='text'\r\n          placeholder='YYYY'\r\n          onChange={(e) => setFromDate(e.target.value)}\r\n          value={fromDate}\r\n          required\r\n        />\r\n        <label htmlFor='study-end'>To:</label>\r\n        <input\r\n          type='text'\r\n          placeholder='YYYY or Present'\r\n          onChange={(e) => setToDate(e.target.value)}\r\n          value={toDate}\r\n          required\r\n        />\r\n        <div className='button-wrapper'>\r\n          <button className='record-btn --add'>Add Record</button>\r\n          <button onClick={clearFields} className='record-btn --close'>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {previousEducaction.map((educationRecord) => (\r\n        <div className='record-wrapper' key={educationRecord.key}>\r\n          <Card\r\n            fromDate={educationRecord.fromDate}\r\n            toDate={educationRecord.toDate}\r\n            title={educationRecord.study}\r\n            location={educationRecord.school}\r\n          />\r\n          {previousEducaction.length > 0 ? (\r\n            <button\r\n              className='delete-btn --close'\r\n              onClick={deleteRecord}\r\n              id={educationRecord.key}\r\n            >\r\n              Delete\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EducationForm;\r\n","import React, { useState } from 'react';\r\nimport './workForm.scss';\r\nimport Card from '../../CVPreview/Card/Card';\r\n\r\nfunction WorkForm({ workHistory, setWorkExperience }) {\r\n  const [companyName, setCompanyName] = useState('');\r\n  const [position, setPosition] = useState('');\r\n  const [jobDescription, setJobDescription] = useState('');\r\n  const [fromDate, setFromDate] = useState('');\r\n  const [toDate, setToDate] = useState('');\r\n\r\n  function displayForm() {\r\n    const formWrapper = document.querySelector('.work-form');\r\n    formWrapper.classList.toggle('--visible');\r\n    const openBtn = document.querySelector('.open-workForm-btn');\r\n    if (formWrapper.classList.value === 'work-form --visible') {\r\n      openBtn.innerHTML = 'Close Form';\r\n      openBtn.className = 'open-workForm-btn --close';\r\n    } else {\r\n      openBtn.innerHTML = 'Add';\r\n      openBtn.className = 'open-workForm-btn --add';\r\n    }\r\n  }\r\n\r\n  const newJobRecord = {\r\n    companyName,\r\n    position,\r\n    jobDescription,\r\n    fromDate,\r\n    toDate,\r\n    key: position,\r\n  };\r\n\r\n  function addRecord(e) {\r\n    e.preventDefault();\r\n    setWorkExperience((prevRecords) => [...prevRecords, newJobRecord]);\r\n    clearFields();\r\n  }\r\n\r\n  function clearFields() {\r\n    setCompanyName('');\r\n    setPosition('');\r\n    setJobDescription('');\r\n    setFromDate('');\r\n    setToDate('');\r\n  }\r\n\r\n  function deleteRecord(e) {\r\n    // get card title to determine which work record should be deleted\r\n    const recordTitle = e.target.id;\r\n    // update previous work records array - delete unwanted work record\r\n    const updatedArray = workHistory.filter(\r\n      (workRecord) => workRecord.position !== recordTitle\r\n    );\r\n    setWorkExperience(updatedArray);\r\n  }\r\n\r\n  return (\r\n    <div className='work-experience-block'>\r\n      <h1 className='section-header'>Work Experience</h1>\r\n      <button className='open-workForm-btn --add' onClick={displayForm}>\r\n        Add\r\n      </button>\r\n      <form className='work-form' onSubmit={addRecord}>\r\n        <label htmlFor='company-field'>Company Name</label>\r\n        <input\r\n          type='text'\r\n          id='company-field'\r\n          placeholder='Google'\r\n          onChange={(e) => setCompanyName(e.target.value)}\r\n          required\r\n          value={companyName}\r\n        />\r\n        <label htmlFor='position-field'>Position Title</label>\r\n        <input\r\n          type='text'\r\n          id='position-field'\r\n          placeholder='CEO'\r\n          onChange={(e) => setPosition(e.target.value)}\r\n          required\r\n          value={position}\r\n        />\r\n        <label htmlFor='job-description'>Job Description</label>\r\n        <textarea\r\n          id='job-description'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Main tasks of your jobs'\r\n          onChange={(e) => setJobDescription(e.target.value)}\r\n          required\r\n          value={jobDescription}\r\n        ></textarea>\r\n        <label htmlFor='work-from'>From:</label>\r\n        <input\r\n          type='text'\r\n          placeholder='YYYY'\r\n          onChange={(e) => setFromDate(e.target.value)}\r\n          required\r\n          value={fromDate}\r\n        />\r\n        <label htmlFor='work-to'>To:</label>\r\n        <input\r\n          type='text'\r\n          placeholder='YYYY or Present'\r\n          onChange={(e) => setToDate(e.target.value)}\r\n          required\r\n          value={toDate}\r\n        />\r\n        <div className='button-wrapper'>\r\n          <button className='record-btn --add'>Add Record</button>\r\n          <button onClick={clearFields} className='record-btn --close'>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {workHistory.map((previousWork) => (\r\n        <div className='record-wrapper' key={previousWork.key}>\r\n          <Card\r\n            fromDate={previousWork.fromDate}\r\n            toDate={previousWork.toDate}\r\n            title={previousWork.position}\r\n            location={previousWork.companyName}\r\n            description={previousWork.jobDescription}\r\n          />\r\n          {workHistory.length > 0 ? (\r\n            <button\r\n              className='delete-btn --close'\r\n              onClick={deleteRecord}\r\n              id={previousWork.key}\r\n            >\r\n              Delete\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorkForm;\r\n","import React from 'react';\r\nimport PersonalDetailsForm from './PersonalDetailsForm/PersonalDetails';\r\nimport EducationForm from './EducationForm/EducationForm';\r\nimport WorkForm from './WorkForm/WorkForm';\r\n\r\nfunction ResumeView({\r\n  person,\r\n  previousEducaction,\r\n  workHistory,\r\n  setName,\r\n  setSurname,\r\n  setEmail,\r\n  setNumber,\r\n  setEducation,\r\n  setWorkExperience,\r\n}) {\r\n  return (\r\n    <div className='resume-form-block'>\r\n      <PersonalDetailsForm\r\n        person={person}\r\n        setName={setName}\r\n        setSurname={setSurname}\r\n        setEmail={setEmail}\r\n        setNumber={setNumber}\r\n      />\r\n      <EducationForm\r\n        previousEducaction={previousEducaction}\r\n        setEducation={setEducation}\r\n      />\r\n      <WorkForm\r\n        workHistory={workHistory}\r\n        setWorkExperience={setWorkExperience}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResumeView;\r\n","import React from 'react';\r\nimport './userCV.scss';\r\nimport Card from '../Card/Card';\r\n\r\nfunction UserCV({ person, education, workExperience }) {\r\n  return (\r\n    <div className='cv-wrapper'>\r\n      <div className='personal-details --wrapper'>\r\n        <h1 className='personal-details --name'>\r\n          {person.name} {person.surname}\r\n        </h1>\r\n        <div className='personal-contacts-wrapper'>\r\n          <h4 className='personal-contacts --email'>{person.email}</h4>\r\n          <h4 className='personal-contacts --number'>{person.number}</h4>\r\n        </div>\r\n      </div>\r\n      <div className='education-wrapper'>\r\n        <h2 className='section-header'>Education</h2>\r\n        {education.map((education, key) => (\r\n          <Card\r\n            key={key}\r\n            fromDate={education.fromDate}\r\n            toDate={education.toDate}\r\n            title={education.study}\r\n            location={education.school}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className='experience-wrapper'>\r\n        <h2 className='section-header'>Experience</h2>\r\n        {workExperience.map((workRecord, key) => (\r\n          <Card\r\n            key={key}\r\n            fromDate={workRecord.fromDate}\r\n            toDate={workRecord.toDate}\r\n            title={workRecord.position}\r\n            location={workRecord.companyName}\r\n            description={workRecord.jobDescription}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserCV;\r\n","import React, { useState } from 'react';\r\nimport ResumeView from './components/CVForm/ResumeView';\r\nimport UserCV from './components/CVPreview/UserCV/UserCV';\r\nimport './styles/styles.scss';\r\n\r\nfunction App() {\r\n  const [previewStatus, setPreviewStatus] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [surname, setSurname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [education, setEducation] = useState([]);\r\n  const [workExperience, setWorkExperience] = useState([]);\r\n  const [person, setPerson] = useState({});\r\n\r\n  function handleSubmit() {\r\n    const currentUser = {\r\n      name,\r\n      surname,\r\n      email,\r\n      number,\r\n    };\r\n    setPerson(currentUser);\r\n  }\r\n\r\n  function showPreviewForm(e) {\r\n    handleSubmit();\r\n    setPreviewStatus(!previewStatus);\r\n  }\r\n\r\n  return (\r\n    <div className='content'>\r\n      {!previewStatus ? (\r\n        <ResumeView\r\n          person={person}\r\n          previousEducaction={education}\r\n          workHistory={workExperience}\r\n          setName={setName}\r\n          setSurname={setSurname}\r\n          setEmail={setEmail}\r\n          setNumber={setNumber}\r\n          setEducation={setEducation}\r\n          setWorkExperience={setWorkExperience}\r\n        />\r\n      ) : (\r\n        <UserCV\r\n          person={person}\r\n          education={education}\r\n          workExperience={workExperience}\r\n        />\r\n      )}\r\n      <footer className='bottom'>\r\n        <button onClick={showPreviewForm} className='change-view-btn --add'>\r\n          {previewStatus ? 'Go Back' : 'Save & View'}\r\n        </button>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}